package magiccollege.scene;

import java.util.ArrayList;

import org.andengine.engine.camera.Camera;
import org.andengine.entity.scene.IOnSceneTouchListener;
import org.andengine.entity.scene.Scene;
import org.andengine.entity.sprite.Sprite;
import org.andengine.entity.text.Text;
import org.andengine.input.touch.TouchEvent;
import org.andengine.input.touch.detector.ScrollDetector;
import org.andengine.input.touch.detector.ScrollDetector.IScrollDetectorListener;
import org.andengine.input.touch.detector.SurfaceScrollDetector;
import org.andengine.opengl.util.GLState;

import magiccollege.Enum.ESceneID;
import magiccollege.manager.ResourceManager;
import magiccollege.manager.SceneManager;

public class HelpScene extends MyScene implements IOnSceneTouchListener,
IScrollDetectorListener {
	ResourceManager rm = ResourceManager.getInstance();
	SceneManager sm = SceneManager.getInstance();
	HelpInfoScene helpInfoScene;
	
	private SurfaceScrollDetector mScrollDetector;
	
	private ArrayList<Sprite> helparray = new ArrayList<Sprite>();
	private ArrayList<Text> textarray = new ArrayList<Text>();

	@Override
	public void createScene() {
		// TODO Auto-generated method stub
		createBackground();
		createText();
		
		Sprite back = new Sprite(690,365,rm.options_back_region,rm.vbo){
				@Override
			public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
					
					if(pSceneTouchEvent.isActionDown()){
						HelpScene.this.onBackKeyPressed();
						return true;
					}
					 return false;
	    }};
	    Sprite card = new Sprite(72,20,rm.card_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				
				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(0));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	    Sprite cardgroup = new Sprite(72,110,rm.cardgroup_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(1));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	    Sprite fight = new Sprite(72,200,rm.fight_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(2));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	    Sprite block = new Sprite(72,290,rm.block_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(3));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	  
	    
	    Sprite generalskill = new Sprite(72,380,rm.generalskill_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(4));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	   
	    Sprite superskill = new Sprite(72,470,rm.superskill_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(5));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	    
	    Sprite fightground = new Sprite(72,560,rm.fightground_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(6));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	    
	    Sprite helpstate= new Sprite(72,650,rm.helpstate_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(7));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	    
	     Sprite abnormal = new Sprite(72,740,rm.abnormalstate_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(8));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	    Sprite system= new Sprite(72,830,rm.system_region ,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(9));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	    
	  
	    
	    Sprite store = new Sprite(72,920,rm.store_region,rm.vbo){
			@Override
		  public boolean onAreaTouched(final TouchEvent pSceneTouchEvent, final float pTouchAreaLocalX, final float pTouchAreaLocalY) {
				

				if(pSceneTouchEvent.isActionUp()){
					helpInfoScene = new HelpInfoScene(textarray.get(10));
					helpInfoScene.createScene();
					SceneManager.getInstance().setScene(helpInfoScene);
					
					return true;
				}
				 return false;
	    }};
	  
	    
	    helparray.add(card);
	    helparray.add(cardgroup);
	    helparray.add(fight);
	    helparray.add(block);
	    
	   
	    helparray.add(generalskill);
	    helparray.add(superskill);
	    
	    helparray.add(fightground);
	    
	    helparray.add(helpstate);
	    helparray.add(abnormal);
	    
	    helparray.add(system);
	    helparray.add(store);
	    
	    
		
		attachChild(back);
		attachChild(card);
		attachChild(cardgroup);
		attachChild(fight);
		attachChild(block);		
		attachChild(generalskill);
		attachChild(superskill);
		attachChild(fightground);
		attachChild(helpstate);
		attachChild(abnormal);
		attachChild(system);
		attachChild(store);
		
		registerTouchArea(back);
		registerTouchArea(card);
		registerTouchArea(cardgroup);
		registerTouchArea(fight);
		registerTouchArea(block);
		registerTouchArea(generalskill);
		registerTouchArea(superskill);
		registerTouchArea(fightground);
		registerTouchArea(helpstate);
		registerTouchArea(abnormal);	
		registerTouchArea(system);
		registerTouchArea(store);
		
		
		
		
		 setTouchAreaBindingOnActionDownEnabled(true);
		 enableTouchDetectors(); // NEW
		
		
	}

	@Override
	public void onBackKeyPressed() {
		rm.unloadHelpTexture();
		sm.setScene(ESceneID.options);
	}

	@Override
	public ESceneID getSceneID() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void disposeScene() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onScroll(final ScrollDetector pScollDetector, final int pPointerID,
	    final float pDistanceX, final float pDistanceY) {
	       
	    	if(pDistanceY<0){
	    		moveUp();
	    	}else{
	    		moveDown();
	    	}
	    	comeBackHere();
	}

	@Override
	public void onScrollFinished(ScrollDetector arg0, int arg1, float arg2,
			float arg3) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onScrollStarted(ScrollDetector arg0, int arg1, float arg2,
			float arg3) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean onSceneTouchEvent(final Scene pScene, final TouchEvent pSceneTouchEvent) {
		
	        if (pSceneTouchEvent.isActionDown()) {
	            this.mScrollDetector.setEnabled(true);
	        }
	        this.mScrollDetector.onTouchEvent(pSceneTouchEvent);

	    return true;
	}
	
	/**
	 * ÔÊÐí¹ö¶¯¼à¿Ø
	 */
	private void enableTouchDetectors() {
	    this.mScrollDetector = new SurfaceScrollDetector(this);
	  
	    setOnSceneTouchListener(this);
	    setTouchAreaBindingOnActionDownEnabled(true);
	}
	
	private void moveUp(){
			for(int i = 0 ; i < helparray.size(); i++){
				helparray.get(i).setPosition(helparray.get(i).getX(),helparray.get(i).getY()-90);
			}
	}
	private void moveDown(){
			for(int i = 0 ; i < helparray.size(); i++){
				helparray.get(i).setPosition(helparray.get(i).getX(),helparray.get(i).getY()+90);
			}
	}
	private void comeBackHere(){
		if(helparray.get(0).getY()>0){
			helparray.get(0).setPosition(helparray.get(0).getX(),0);
			for(int i = 1; i < helparray.size(); i++){
				helparray.get(i).setPosition(helparray.get(0).getX(),helparray.get(0).getY()+90*i);
			}
		}
		int size = helparray.size();
		if(helparray.get(size-1).getY()<480){
			helparray.get(size-1).setPosition(helparray.get(size-1).getX(),390);
			for(int i = size-1 ; i > 0; i--){
				helparray.get(i-1).setPosition(helparray.get(size-1).getX(),helparray.get(size-1).getY()-90*(size-i));
			}
			
		}
	}
	
	private void createText(){
		Text t0 = new Text(72,0,rm.helpFont,"¡¾¿¨ÅÆ¡¿:\n\nÁ¦£º\n  Ã¿ÕÅ¿¨ÅÆ¶¼ÓÐ×Ô¼ºµÄ¹¥»÷Á¦£¬Ð­Á¦£¬\n£¬ÖúÁ¦,ÉÏ·½µÄÊý×ÖÎª¹¥»÷Á¦£¬×ó±ßµÄ\n" +
				"Êý×ÖÎªÐ­Á¦,ÓÒ±ßµÄÊý×ÖÎªÖúÁ¦£¬ÔÚÕ½\n¶·ÖÐ£¬¹¥»÷Á¦¾ö¶¨¿¨ÅÆÔÚ¹¥»÷Ê±¶ÔµÐ\n·½Ôì³ÉµÄÉËº¦¡£\n\nHPÖµ:\n  µ±HPÖµÐ¡ÓÚµÈÓÚ0Ê±£¬¿¨ÅÆ¾Í»á´Ó³¡\nÉÏ½øÈëÃ¿ÕÅ¿¨ÅÆµÄHPÖµ¶¼ÊÇÓÐÉÏÏÞµÄ£¬\n¸´<»Ö>HP²»»á³¬¹ýÉÏÏÞ£¬<Ôö¼Ó>HP¿É\nÒÔ³¬¹ýÉÏÏÞ¡£\n\n" +
				"¼¼ÄÜ:\n  Ã¿ÕÅ¿¨ÅÆÓÐ3¸ö¼¼ÄÜ£¬¼¼ÄÜÓÐºÜ¶àÖÖ\nÀà£¬·¢¶¯Ìõ¼þÒ²¸÷ÓÐ²»Í¬¡£Ò»°ã¼¼ÄÜ\nÔÚÐÐ¶¯Ê±¡¢½øÐÐÆÕÍ¨¹¥»÷Ç°´¥·¢£¬Æä\nËû¼¼ÄÜ²ÎÕÕ¼¼ÄÜËµÃ÷¡£\n\nÊÆÁ¦:\n  ËùÓÐµÄ¿¨ÅÆ·ÖÎª4¸öÊÆÁ¦£¬·Ö±ð\nÎª¡°¶«Ð£¡±¡¢¡°ÄÏÐ£¡±¡¢¡°±±Ð£¡±ºÍ¡°Öéº£¡±¡£" +
				"\nÒ»¸ö¿¨×éÀï×î¶àÖ»ÄÜÊ¹ÓÃÁ½ÖÖ²»Í¬\nÊÆÁ¦µÄ¿¨ÅÆ¡£»¹ÓÐ¸ü¶à¹ØÓÚÊÆÁ¦µÄ\nÀ©Õ¹Ó¦ÓÃ¾´ÇëÆÚ´ý¡£",rm.vbo);
		
		Text t1 = new  Text(72,0,rm.helpFont,"¡¾¿¨×é¡¿:\n\n¿¨×é×é³É:\n  Ò»¸ö¿¨×é£¬ÓÉÖÁÉÙ1ÕÅ¿¨ÅÆ£¬×î¶à10\n" +
				"ÕÅ¿¨ÅÆ×é³É£¬Ò»¸ö¿¨×éÀï×î¶àÖ»ÄÜ\nÊ¹ÓÃÁ½ÖÖ²»Í¬ÊÆÁ¦µÄ¿¨ÅÆ¡£\n\n¶àÌ×¿¨×é:\n  ³õÊ¼Íæ¼ÒÖ»ÄÜ±£Áô1Ì×¿¨×é£¬Ëæ×ÅµÈ\n¼¶µÄÔö³¤,»áÖð²½¿ª·Å¿É±£´æ¿¨" +
				"×éÊý\nÁ¿£¬Íæ¼Ò×î¶à¿ÉÍ¬Ê±±£´æ4Ì×¿¨×é£¬\n¿ÉÒÔÔÚ¿¨×éÅäÖÃÖ÷½çÃæÖÐÇÐ»»Ê¹ÓÃ\n¿¨×é¡£",rm.vbo);
		Text t2 = new  Text(72,0,rm.helpFont,"¡¾Õ½¶·¡¿:\n\n»ØºÏ:\n  Õ½¶·¿ªÊ¼ºó£¬Íæ¼ÒºÍ¶ÔÊÖ»¥ÏàÐÐ¶¯£¬\nÒ»¸ö»ØºÏÖÐÒ»·½ÐÐ¶¯£¬ÏÂÒ»¸ö»ØºÏÔò\n»»¶Ô·½ÐÐ¶¯¡£" +
				"¿ÉÒÔÔÚ½øÈëÕ½¶·Ö®Ç°Ñ¡\nÔñÏÈÊÖ»òÕßºóÊÖ¡£Ò»¸ö»ØºÏÖÐµÄÐÐ¶¯\n´óÖÂ·ÖÎªÈý¸ö½×¶Î£ºÃþÅÆ½×¶Î¡¢³öÅÆ\n½×¶Î¡¢¼ÆËã½×¶Î¡¢Õ½¶·½×¶Î¡£\n\nÅÆ¶Ñ:\nÕ½¶·¿ªÊ¼ºó£¬Ë«·½¿¨×éÖÐËùÓÐµÄ¿¨ÅÆ\n¶¼ÔÚ¸÷×ÔµÄÅÆ¶ÑÖÐ£¬Ã¿´Îµ±×Ô¼ºµÄ»Ø\n" +
				"ºÏ¿ªÊ¼Ê±£¬»á´ÓÅÆ¶ÑÖÐËæ»ú³éÈ¡Ò»ÕÅ\nÅÆ½øÈëÊÖÅÆ¡£\n\nÊÖÅÆ:\nÍæ¼Ò¿ÉÒÔÏà»¥¿´µ½¶Ô·½µÄÊÖÅÆ£¬ÊÖÅÆ\nÉÏÏÞÎª5ÕÅ£¬ÈôÊÖÅÆÒÑÂú£¬Ôò²»»á³é\nÅÆ¡£\n\nÕ½³¡:\nÕ½³¡ÓÖ³Æ³¡ÉÏ£¬ÊÇ¿¨ÅÆ½»Õ½µÄÇøÓò£¬\n" +
				"Ö»ÓÐÔÚÕ½³¡ÉÏµÄ¿¨ÅÆ£¬²ÅÄÜÔÚ×Ô¼º»Ø\nºÏµÄÕ½¶·½×¶Î·¢¶¯¼¼ÄÜºÍÆÕÍ¨¹¥»÷¡£\nÆÕÍ¨¹¥»÷ÊÇ¶Ô×Ô¼ºÕýÇ°·½·¢¶¯µÄ£¬Èç\n¹ûÕýÇ°·½ÓÐµÐ·½¿¨ÅÆ£¬Ôò¶ÔÆäÔì³ÉÉË£¬\nº¦ÆäHPÖµÏ÷¼õÊýÖµµÈÍ¬ÓÚ×ÔÉí¹¥»÷\nÁ¦£»·ñÔò£¬¶ÔµÐ·½Ó¢ÐÛÔì³ÉÉËº¦¡£\n\nÐÐ¶¯:\n" +
				"Ã¿ÕÅ¿¨ÅÆ¿ªÊ¼½øÐÐ¼ÆËãÇ°µ½ÆÕÍ¨¹¥»÷\nºÍ¼¼ÄÜ·¢¶¯½áÊøºó³ÉÎªÒ»´ÎÐÐ¶¯¡£\n\n×ÔÉí:\n" +
				"Ö¸µ±Ç°ÐÐ¶¯µÄ¿¨ÅÆ¡£\n\nÄ¹µØ:\n" +
				"Õ½¶·ÖÐ£¬Õ½³¡ÉÏÉúÃüÖµÐ¡ÓÚµÈÓÚ0µÄ\n¿¨ÅÆ½øÈëÄ¹µØ¡£\n\nÃþÅÆ½×¶Î:\n" +
				"ÔÚÒ»¸ö»ØºÏµÄÃþÅÆ½×¶Î£¬»á´ÓÅÆ¶ÑÖÐ\nËæ»ú³éÈ¡Ò»ÕÅÅÆ½øÈëÊÖÅÆ¡£\n\n³öÅÆ½×¶Î:\n" +
				"¿ÉÒÔÑ¡Ôñ½«ÊÖÅÆÖÐ0¡¢1¡¢2ÕÅ¿¨ÅÆ·Å\nÈëÕ½³¡¡£\n\n¼ÆËã½×¶Î:\n" +
				"ÓÐ¡°ÉÏ³¡Ê±·¢¶¯¡±µÄ¼¼ÄÜµÄ¿¨ÅÆÒÀ´Î\n·¢¶¯¼¼ÄÜ£»¶ÔÃ¿ÕÅ¿¨ÅÆ¼ÆËãÆä<Ð­Öú\n×´Ì¬>Êý£»·¢¶¯Ä³Ð©<³¬¼¶¼¼ÄÜ>¡£\n\nÕ½¶·½×¶Î:\n" +
				"ÔÚÕ½³¡ÉÏµÄ¿¨ÅÆ»áÒÀ´Î·¢¶¯¼¼ÄÜºÍ½ø\nÐÐÆÕÍ¨¹¥»÷¡£\n\nÓ¢ÐÛÉúÃüÖµ:\n" +
				"Ã¿¸öÓ¢ÐÛ¶¼ÓÐÉúÃüÖµ£¬Õ½¶·ÖÐÈç¹ûÓ¢\nÐÛµÄÉúÃüÖµÐ¡ÓÚµÈÓÚ0£¬ÔòÕ½¶·Ê§°Ü¡£\n\nÊ¤¸º¹æÔò:\n" +
				"Èç¹ûÊ¹µÐ·½µÄËùÓÐ¿¨ÅÆ¶¼½øÈëÄ¹µØ»ò\nÕßÓ¢ÐÛÉúÃüÖµÐ¡ÓÚµÈÓÚ0£¬ÔòÅÐÎªÕ½\n¶·Ê¤Àû¡£",rm.vbo);
		Text t3 = new  Text(72,0,rm.helpFont,"¡¾¹Ø¿¨¡¿:\n\nµØÍ¼:\n" +
				"Íæ¼Ò¿ÉÒÔ´Á²Ëµ¥½çÃæÉÏµÄPLAY°´Å¥\n½øÈëÓÎÏ·£¬ÓÎÏ·ÖÐÓÐÈô¸ÉÕÅµØÍ¼£¬\nÃ¿ÕÅµØÍ¼ÉÏÓÐÐí¶àNPC¡£\n\n¹Ø¿¨:\n" +
				"Ã¿ÕÅµØÍ¼ÓÐÐí¶à¹Ø¿¨£¬Ä³Ð©NPCÊÇ¹Ø\n¿¨µÄÊØÎÀÕß£¬Ö»ÓÐÓëËùÓÐNPC´¥·¢¶Ô\nÕ½²¢Ê¤Àûºó²ÅÄÜ½øÈëÏÂÒ»ÕÅµØÍ¼£¨Òþ\n²Ø¹Ø¿¨³ýÍâ£©¡£\n\nÐÇÊý:\n" +
				"´òÍ¨Ò»¸ö¹Ø¿¨µÄÒ»¸öÄÑ¶È¾ÍÄÜ»ñµÃÒ»\n¿ÅÐÇ¡£ÐÇÊýÂú×ãÒ»¶¨Ìõ¼þ¿ÉÒÔ¶Ò»»Ï¡\nÓÐ¿¨ÅÆ¡£\n\n½±Àø:\n" +
				"´òÍ¨Ò»¸ö¹Ø¿¨µÄÒ»¸öÄÑ¶È¾ÍÄÜ»ñµÃÒ»\nÕÅ¿¨ÅÆ¡£\n\nÒþ²Ø¹Ø¿¨:\n" +
				"Ò»Ð©µØÍ¼ÖÐ°üº¬Òþ²Ø¹Ø¿¨£¬´òÍ¨ËùÓÐ\nÒþ²Ø¹Ø¿¨¿ÉÒÔ»ñµÃÏ¡ÓÐ¿¨ÅÆ\n¡¶³ÌÐòÔ³¡·¡£",rm.vbo);
		Text t4 = new  Text(72,0,rm.helpFont,"¡¾Í¨ÓÃ¼¼ÄÜ¡¿:\n\nµ÷Õû:\n" +
				"ÈôÃ»ËµÃ÷¶ÔÏó£¬½«Ò»ÕÅËæ»ú¿¨ÅÆµÄÐ­\nÁ¦»òÕßÖúÁ¦½øÐÐµ÷Õû£¬·½Ê½Îª+1»ò\nÕß-1£¬Ê¹Æä½Ó½ü<Ð­Öú×´Ì¬>¡£Èô£¨Ð­Á¦\n" +
				"Óë×ó±ß¿¨ÅÆµÄÖúÁ¦µÄ²îÖµ£©Ð¡ÓÚ£¨Öú\nÁ¦ÓëÓÒ±ß¿¨ÅÆµÄÐ­Á¦µÄ²îÖµ£©£¬ÔòÑ¡\nÔñÐ­Á¦½øÐÐµ÷Õû£¬·ñÔòÑ¡ÔñÖúÁ¦¡£²»»á\n" +
				"Ñ¡ÔñÒÑ¾­ÓëÏàÁÚ¿¨ÅÆ³ÉÎª<Ð­Öú×´Ì¬>\nµÄÄÇÖÖÁ¦¡£\n\nÄæµ÷Õû:\n" +
				"¡°µ÷Õû¡±µÄ·´Ïò½øÐÐ¡£",rm.vbo);
		Text t5 = new  Text(72,0,rm.helpFont,"¡¾³¬¼¶¼¼ÄÜ¡¿:\n\n´«ËÍÕó:\n" +
				"Ò»µ©£¨Ò»ÕÅ¿¨ÅÆµÄÐ­Á¦¼ÓÉÏÆä×ó±ß¿¨\nÅÆµÄÖúÁ¦µÄÖµ£©µÈÓÚ£¨ÆäÖúÁ¦¼ÓÉÏÆä\n" +
				"ÓÒ±ß¿¨ÅÆµÄÐ­Á¦µÄÖµ£©£¬Á¢¼´·¢¶¯Ò»\n´Î¡°´«ËÍÕó¡±£¬½«×ÔÉíÕýÇ°·½µÄ¿¨ÅÆ\n" +
				"ËÍ»ØµÐ·½µÄ<ÅÆ¶Ñ>¡£",rm.vbo);
		Text t6 = new  Text(72,0,rm.helpFont,"¡¾¾º¼¼³¡¡¿:\n\nÍøÂç¶ÔÕ½:\n" +
				"Íæ¼Ò¿ÉÒÔ´ÓÖ÷½çÃæÉÏµÄ¾º¼¼³¡°´Å¥½ø\nÈëÍøÂç¶ÔÕ½¡£Ñ¡ÔñÔÚÏßµÄ¶ÔÊÖ²¢ÇÒ¾­\n¹ý¶Ô·½Í¬Òâºó¼´¿É½øÈëÕ½¶·¡£\n\nÕ½¶·:\n" +
				"³öÅÆ½×¶ÎÏÞÊ±Îª30Ãë£¬ÆäËûÓëµ¥»ú\nÕ½¶·ÏàÍ¬¡£\n\nÈÙÓþ:\n" +
				"Ò»ÖÖ»õ±Ò£¬¿ÉÒÔ¶Ò»»Ï¡ÓÐ¿¨ÅÆ¡£Íø\nÂç¶ÔÕ½Õ½Ê¤¶ÔÊÖ¼´¿É»ñµÃ¡£",rm.vbo);
		Text t7 = new  Text(72,0,rm.helpFont,"¡¾Ð­Öú×´Ì¬¡¿\n\n" +
				"ÈôÒ»ÕÅ¿¨ÅÆµÄÐ­Á¦µÈÓÚÆä×ó±ß¿¨ÅÆ\nµÄÖúÁ¦£¬»òÕßÆäÖúÁ¦µÈÓÚÓÒ±ß¿¨ÅÆµÄ\n" +
				"Ð­Á¦£¬Ôò¼ÇÎªÒ»¸öÐ­Öú×´Ì¬£¬Ò»ÕÅ\n¿¨ÅÆ×î¶à¿ÉÒÔÓµÓÐ2¸öÐ­Öú×´Ì¬¡£´Ë\n" +
				"×´Ì¬½«¼«´óÌáÉý¼¼ÄÜÐ§¹û¡£",rm.vbo);
		Text t8 = new  Text(72,0,rm.helpFont,"¡¾Òì³£×´Ì¬¡¿:\n\n½ûÁÆ:\n" +
				"ÌØÊâ×´Ì¬£¬²»ÄÜ±»Ïû³ý¡£·ÀÖ¹Ò»ÇÐ\nÐÎÊ½µÄHP<»Ö¸´>£¬µ«ÊÇ²»Ó°ÏìHP\n<Ôö¼Ó>¡£³ÖÐøÖ±µ½¿¨ÅÆ´Ó³¡ÉÏÀë¿ª¡£\n\n¶³½á:\n" +
				"Ê§È¥ÐÐ¶¯¡£³ÖÐø1»ØºÏ¡£\n\n»ìÂÒ:\n" +
				"²»·¢¶¯¼¼ÄÜ£¬ÆÕÍ¨¹¥»÷½«¹¥»÷×ÔÉí\nÓ¢ÐÛ¡£³ÖÐø1»ØºÏ¡£\n\nÂé±Ô:\n" +
				"²»ÄÜ½øÐÐÆÕÍ¨¹¥»÷¡£³ÖÐø1»ØºÏ¡£\n\nÖÐ¶¾:\n" +
				"Ã¿´ÎÐÐ¶¯½áÊøºóÊÜµ½Ò»¶¨Á¿µÄ¶¾ÉË\nº¦¡£³ÖÐøÖ±µ½¿¨ÅÆ´Ó³¡ÉÏÀë¿ª¡£",rm.vbo);
		Text t9 = new  Text(72,0,rm.helpFont,"¡¾ÏµÍ³ÉèÖÃ¡¿:\n\n" +
				"¿ÉÒÔÉèÖÃÊÇ·ñ¿ªÊ¼±³¾°ÒôÀÖ¡¢Õ½¶·\nÊ±µÄÒôÐ§¡¢Á£×ÓÐ§¹ûµÈ£¬ÏêÇéÇë¿´\nÓÎÏÀ²Ëµ¥ÏÂµÄÏµÍ³ÉèÖÃ",rm.vbo);
		Text t10 = new  Text(72,0,rm.helpFont,"¡¾ÉÌ³Ç¡¿:\n\n" +
				"¿ÉÒÔÊ¹ÓÃ»õ±Ò¶Ò»»¿¨ÅÆ¡£",rm.vbo);
		
		textarray.add(t0);
		textarray.add(t1);
		textarray.add(t2);
		textarray.add(t3);
		textarray.add(t4);
		textarray.add(t5);
		textarray.add(t6);
		textarray.add(t7);
		textarray.add(t8);
		textarray.add(t9);
		textarray.add(t10);
		
		
		
		
	}
	private void createBackground()
	{
		Sprite background = new Sprite(0, 0, ResourceManager.getInstance().help_background_region, ResourceManager.getInstance().vbo)
	    {
	        @Override
	        protected void preDraw(GLState pGLState, Camera pCamera) 
	        {
	            super.preDraw(pGLState, pCamera);
	            pGLState.enableDither();
	        }
	    };
	    this.attachChild(background);
	}

}
